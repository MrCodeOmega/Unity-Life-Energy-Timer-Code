using UnityEngine;
using System;
using UnityEngine.UI;

public class LifeManager : MonoBehaviour
{
    public Text sayacText;
    public Text canText;

    public GameObject[] health;

    int _lives;
    DateTime timeOfPause;
    int maxLives = 5;
    public double timerForLife;
    float lifeReplenishTime = 20f; //20 saniye de 1 can eklemek için
    public int lives
    {
        set
        {
            _lives = value;
            PlayerPrefs.SetInt("Lives", _lives);
        }
        get
        {
            return _lives;
        }
    }
    void Awake()
    {

        if (!PlayerPrefs.HasKey("Lives"))
        {
            PlayerPrefs.SetString("LifeUpdateTime", DateTime.Now.ToString());
        }
        lives = PlayerPrefs.GetInt("Lives", maxLives);
        //Can sadece maxLives'tan az ise ekleniyor.     canın azalması PlayerController Die() fonksiyonu içinde.
        if (lives < maxLives)
        {
            float timerToAdd = (float)(System.DateTime.Now - Convert.ToDateTime(PlayerPrefs.GetString("LifeUpdateTime"))).TotalSeconds;
            UpdateLives(timerToAdd);
        }

    }

    private void Update()
    {

        if (lives != 0)
        {
            for (int i = 0; i < lives; i++)
            {
                health[i].SetActive(true);
                for (int j = lives; j < maxLives-1; j++)
                {
                    health[j].SetActive(false);
                }
            }
        }
        else
        {
            for (int i = 0; i < maxLives-1; i++)
            {
                health[i].SetActive(false);
            }
        }


        if (lives < maxLives)
        {
            timerForLife += Time.deltaTime;
            if (timerForLife > lifeReplenishTime)
            {
                UpdateLives(timerForLife);
            }
           
        }

         var zaman = TimeSpan.FromSeconds(timerForLife);
        int hh = zaman.Hours;
        int mm = zaman.Minutes;
        int ss = zaman.Seconds;

        sayacText.text ="Saat:"+hh+" Dakika: "+ mm+" Saniye:" +ss;

        canText.text = lives.ToString();
    }
      void UpdateLives(double timerToAdd)
    {
        if (lives < maxLives-1)
        {
            int livesToAdd = Mathf.FloorToInt((float)timerToAdd / lifeReplenishTime);
            timerForLife = (float)timerToAdd % lifeReplenishTime;
            lives += livesToAdd;
            if (lives > maxLives)
            {
                lives = maxLives;
                timerForLife = 0;
            }
            PlayerPrefs.SetString("LifeUpdateTime", DateTime.Now.AddSeconds(-timerForLife).ToString());
        }
        else
        {
            PlayerPrefs.SetString("LifeUpdateTime", DateTime.Now.ToString());
        }
    }
    void OnApplicationPause(bool isPause)
    {
        if (isPause)
        {
            timeOfPause = System.DateTime.Now;
        }
        else
        {
            if (timeOfPause == default(DateTime))
            {
                timeOfPause = System.DateTime.Now;
            }
            float timerToAdd = (float)(System.DateTime.Now - timeOfPause).TotalSeconds;
            timerForLife += timerToAdd;
            UpdateLives(timerForLife);
        }
    }
}
